{% extends 'layouts/base.twig' %}
{% trans_default_domain 'prompts' %}

{% block body %}
<nav class="navbar navbar-expand-lg navbar-light dashboard-list">
	<h2>{{ headerTitle|trans|capitalize }}</h2>
	<button id="0" type="button" item="0" data-toggle="modal" data-target="#modal_dialog"  class="btn btn-success oi oi-plus" title="{{ 'title.create'|trans|capitalize }}"></button>
</nav>

{% if table is not defined %}
	{% set table = {} %}
{% endif %}

{% if table.width is not defined or table.width > 12 or table.width < 1 %}
    {% set table = table|merge({'width': 12}) %}
{% endif %}

<div class="row" itemPath="{{ path(itemPath) }}">
	<div class="col-sm-{{ table.width }}">
		<div id="table_body"></div>
	</div>
</div>

<form id="form-resp" action="{{ path(app.request.attributes.get('_route'), app.request.attributes.get('_route_params')) }}" method="post">
	<input type="hidden" name="searchStr" id="searchStr" value="{{ searchStr }}" />

{% if input.isActive is defined %}
	<input type="hidden" name="showActive" id="showActive" value="{{ input.isActive.status }}" />
{% endif %}

</form>

{% include '/dialogs/modal.twig' %}

{% endblock %}

{% block javascripts %}
<script src="{{ asset('bundles/datatables/js/datatables.js') }}"></script>

<script>

function openFormModal( obj ){
	$.ajax({
		url:  $("div[itemPath]").attr( "itemPath" )+"?id="+obj.attr( "id" ),
		type: "GET",
		async: true,
		dataType: "json",
		// data: null,
		success: function( data, textStatus, jqXHR ) {
			$("#modal_body").html(data.html);
			$('input:visible:enabled:first', '#modal_dialog').focus();

			$('div#modal_dialog form').submit(function(e) {
				let $form = $(this);

				$("div[id^='err_']").html("");

				$.ajax({
					type:	$form.attr('method'),
					url:	$form.attr('action'),
					data:	$form.serialize()
				}).done(function(data) {
					if( data.error.message.length > 0 ){
						$("#err_"+data.error.field).html(data.error.message);
					}else{
						$('#modal_dialog').modal('toggle');
						$("#searchStr").val(data.searchStr);
						$("#showActive").val( data.showActive );
						$('form#form-resp').submit();
					}
				}).fail(function() {
					alert("Server system error.");
				});
				e.preventDefault();
			});
		},
		error: function( jqXHR, textStatus, errorThrown ) {
			alert( "JS system error." );
		}
	});
}
//______________________________________________________________________________

/**
 *
 * @param obj
 * @param size - value to increase button. Must be even.
 */
function clearSearchBtnHover( obj, size ){
	let new_size = obj.css("font-size");
	new_size	= (parseInt(new_size.substring(0,(new_size.length-2))) + size) + "px";
	obj.css("font-size", new_size);

	new_size	= obj.css("padding-left");
	obj.css("padding-left",((parseInt(new_size.substring(0,(new_size.length-2))) - size/2 )+"px"));

	new_size	= obj.css("padding-right");
	obj.css("padding-right",((parseInt(new_size.substring(0,(new_size.length-2))) - size/2 )+"px"));
}

$(function() {
	{% if datatable != null %}
		$('#table_body').initDataTables( {{ datatable_settings(datatable) }} )
			.then( function() {
				let entity	= $("table[id^='list_']").attr("id");
				entity	= entity.split("_");
				entity	= entity[1];

				dt.on( 'draw', function () {
					$("table[id^='list_'] tbody tr")
						.click(function(){ openFormModal($(this)); })
						.attr("data-toggle", "modal")
						.attr("data-target", "#modal_dialog")
					;
				});

				$("table[id^='list_'] tbody tr, button[item]")
					.click(function(){ openFormModal($(this)); })
					.attr("data-toggle", "modal")
					.attr("data-target", "#modal_dialog")
				;

				dt.search( "{{ searchStr }}" ).draw();

				$("div.dataTables_filter label").append('<button type="button" class="btn oi oi-circle-x clear-search" title="{{ 'hint.clear_filer'|trans }}"></button>');

				$("div.dataTables_filter label button.clear-search").on('click',function (event) {
					dt.search( "" ).draw();
                });

                $("div.dataTables_filter label button.clear-search").on('mousedown',function (event) {
					clearSearchBtnHover( $(this), +2 );
                });

                $("div.dataTables_filter label button.clear-search").on('mouseup',function (event) {
					clearSearchBtnHover( $(this), -2 );
                });


		{% if input.isActive is defined %}
				$("div.dataTables_filter label").prepend(
					'<div class="form-check form-check-inline">'+
						'<label class="form-check-label" for="show_active">{{ input.isActive.title|trans }}</label>'+
						'<input class="form-check-input" type="checkbox" id="show_active" name="show_active" value="option1" {{ input.isActive.status }} />'+
					'</div>'
				);

				$("#show_active").on('change',function (event) {
					let checked	= $(this).is(":checked") ? "checked" : "";
					$("#searchStr").val('');
					$("#showActive").val(checked);
					$('form#form-resp').submit();
				});
		{% endif %}

			});

	{% endif %}
});
//______________________________________________________________________________

</script>
{% endblock %}